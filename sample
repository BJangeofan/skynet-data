#!/usr/bin/env node

var split = require('split')
var tilebelt = require('tilebelt')
var lines = []

var trainSize = process.argv[2]
var zoomLevel = (process.argv[3] || '').trim()
// TODO: possibly use a tempfile so we don't have to buffer the whole list

process.stdin
.pipe(split())
.on('data', function (line) {
  if (zoomLevel) {
    line = line.split(' ')
    var tile = [line[2], line[3], line[1]].map(Number) // zxy -> xyz
    var tiles = getDescendants(tile, zoomLevel)
    tiles.forEach(function (tile) {
      lines.push([line[0], tile[2], tile[0], tile[1]].join(' ')) // xyz -> file z x y
    })
    return
  }

  lines.push(line)
})
.on('end', function () {
  var num = parseFloat(trainSize)
  if (num < 1) {
    // treat it like a sample rate instead of number of lines
    num = Math.round(num * lines.length)
  }

  while (num-- > 0) {
    console.log(lines[Math.floor(Math.random() * lines.length)])
  }
})

function getDescendants (tile, zoom) {
  var z = tile[2]
  var tiles = [tile]
  while (z < zoom) {
    var c = 0
    var nextTiles = new Array(tiles.length * 4)
    for (var i = 0; i < tiles.length; i++) {
      var children = tilebelt.getChildren(tiles[i])
      for (var j = 0; j < 4; j++) {
        nextTiles[c++] = children[j]
      }
    }
    tiles = nextTiles
    z++
  }
  return tiles
}
